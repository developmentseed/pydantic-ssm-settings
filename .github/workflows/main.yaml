name: CI

on:
  push:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: "poetry"

      - run: poetry install

      - name: run linters
        uses: wearerequired/lint-action@v1
        with:
          black: true
          black_args: pydantic_ssm_settings
          black_command_prefix: poetry run
          flake8: true
          flake8_args: pydantic_ssm_settings
          flake8_command_prefix: poetry run
          mypy: true
          mypy_args: pydantic_ssm_settings
          mypy_command_prefix: poetry run

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # python-version: [3.6, 3.7, 3.8, 3.9]
        python-version: [3.8]
    env:
      PYTHON: ${{ matrix.python-version }}
      OS: ubuntu

    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      - run: poetry install

      - run: poetry run pytest
        env:
          COVERAGE_FILE: coverage/.coverage.linux-py${{ matrix.python-version }}-cN-dN
          CONTEXT: linux-py${{ matrix.python-version }}-compiled-no-deps-no

      - name: store coverage files
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage

  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    concurrency: push
    if: github.ref_name == 'main'
    needs: [test, lint]

    steps:
      - uses: actions/checkout@v3
        with:
          # You must set fetch-depth to 0 when using actions/checkout@v2, since
          # Python Semantic Release needs access to the full history to
          # determine whether a release should be made.
          fetch-depth: 0

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: "poetry"

      - name: Python Semantic Release
        uses: relekang/python-semantic-release@v7.29.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repository_username: __token__
          repository_password: ${{ secrets.PYPI_API_TOKEN }}
