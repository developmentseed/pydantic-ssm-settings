name: CI

on:
  push:
    branches:
      - main
    tags:
      - "**"
  pull_request: {}

jobs:
  lint:
    strategy:
      fail-fast: false
      matrix:
        # python-version: [3.6, 3.7, 3.8, 3.9]
        python-version: [3.8]
        # poetry-version: [1.0, 1.1.11]
        # os: [ubuntu-18.04, macos-latest, windows-latest]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      - run: poetry install

      - name: run linters
        uses: wearerequired/lint-action@v1
        with:
          black: true
          black_args: pydantic_ssm_settings
          black_command_prefix: poetry run
          flake8: true
          flake8_args: pydantic_ssm_settings
          flake8_command_prefix: poetry run
          mypy: true
          mypy_args: pydantic_ssm_settings
          mypy_command_prefix: poetry run

  test-linux:
    name: test py${{ matrix.python-version }} on linux
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # python-version: [3.6, 3.7, 3.8, 3.9]
        python-version: [3.8]
    env:
      PYTHON: ${{ matrix.python-version }}
      OS: ubuntu

    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      - run: poetry install

      - run: poetry run pytest
        env:
          COVERAGE_FILE: coverage/.coverage.linux-py${{ matrix.python-version }}-cN-dN
          CONTEXT: linux-py${{ matrix.python-version }}-compiled-no-deps-no

      - name: store coverage files
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage
